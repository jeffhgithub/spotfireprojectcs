PROCEDURE NCR_L1_rw(
IN p_startDate DATE,
IN p_endDate DATE,
IN p_SupplierName VARCHAR(40000),
IN p_ProductId VARCHAR(40000),
IN p_MfgOrderId VARCHAR(40000),
IN p_ComponentProductId VARCHAR(40000),
IN p_ComponentProductGroupId VARCHAR(40000),
OUT result CURSOR (
    Product VARCHAR (255), 
     PartNumber VARCHAR (255), 
     ComponentProductGroup VARCHAR (255), 
     Component VARCHAR (255), 
     ComponentDesc VARCHAR (255), 
     MfgOrder VARCHAR (255), 
     ModuleSN VARCHAR (255), 
     TxnName VARCHAR (255), 
     ComponentIssueTxnDate TIMESTAMP ,
     QtyIssued INTEGER, 
     IssuedComponentReferenceDesignator VARCHAR (255), 
     Batch VARCHAR (255), 
     SupplierPartNumber VARCHAR (255), 
     SupplierLot VARCHAR (255), 
     NonConformanceReport VARCHAR (255), 
     NCRCreateDate TIMESTAMP, 
     NonConformanceReferenceDesignator VARCHAR (255), 
     FailModeReferenceDesignator VARCHAR (255), 
     DispostionCode VARCHAR (255), 
     RootCauseCode VARCHAR (255), 
     RootCauseCodeDesc VARCHAR (255), 
     RootCauseType VARCHAR (255), 
     NonConformanceCode VARCHAR (255), 
     NonConformanceCodeDesc VARCHAR (255), 
     NCRComment VARCHAR (255), 
     FailureModeCode VARCHAR (255), 
     FailureModeDesc VARCHAR (255), 
     NCRStatus INTEGER, 
     TxnMonth INTEGER, 
     TxnYear INTEGER, 
     MfgOrderID VARCHAR (255), 
     ProductID VARCHAR (255), 
     ComponentProductGroupID VARCHAR (255), 
     Supplier VARCHAR (255), 
     ComponentProductID  VARCHAR (255)

)
)
BEGIN
DECLARE sqlText VARCHAR (400000);
set sqlText =   concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat('
SELECT DISTINCT 
PRODUCTBASE.PRODUCTNAME Product, 
PRODUCT.ZBNAMEOLD PartNumber, 
ZCPRODUCTGROUP.DESCRIPTION ComponentProductGroup, 
PRODUCTBASE_COMP.PRODUCTNAME Component, 
PRODUCT_COMP.DESCRIPTION ComponentDesc, 
MFGORDER.MFGORDERNAME MfgOrder, 
CONTAINER.CONTAINERNAME ModuleSN, 
CDODEFINITION.CDONAME TxnName, 
HISTORYMAINLINE_PROD.TXNDATE ComponentIssueTxnDate,
ISSUEACTUALSHISTORY.QTY QtyIssued, 
ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR IssuedComponentReferenceDesignator, 
CONTAINER_GROUP.CONTAINERNAME Batch, 
ZCINCOMINGDETAIL.ZCVENDORPARTNUMBER SupplierPartNumber, 
ZCINCOMINGDETAIL.ZCVENDORBATCH SupplierLot, 
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN NONCONFORMANCEREPORT.NONCONFORMANCEREPORTNAME
ELSE ''''
END NonConformanceReport, 
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN NONCONFORMANCEREPORT.CREATIONDATE
ELSE NULL
END NCRCreateDate, 
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN NONCONFORMANCEREPORT.ZCNCREFERENCEDESIGNATOR
ELSE ''''
END NonConformanceReferenceDesignator, 
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR
ELSE ''''
END FailModeReferenceDesignator, 
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN ZCDISPOSITIONCODE.ZCDISPOSITIONCODENAME
ELSE ''''
END DispostionCode, 
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN ZCROOTCAUSECODE.ZCROOTCAUSECODENAME
ELSE ''''
END RootCauseCode, 
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN ZCROOTCAUSECODE.DESCRIPTION
ELSE ''''
END RootCauseCodeDesc, 
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN ZCROOTCAUSETYPE.ZCROOTCAUSETYPENAME
ELSE ''''
END RootCauseType, 
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN ZCNONCONFORMANCECODE.ZCNONCONFORMANCECODENAME
ELSE ''''
END NonConformanceCode, 
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN ZCNONCONFORMANCECODE.DESCRIPTION
ELSE ''''
END NonConformanceCodeDesc, 
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN NONCONFORMANCEREPORT.NCRCOMMENT
ELSE ''''
END NCRComment,
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN ZCFAILUREMODECODE.ZCFAILUREMODECODENAME
ELSE ''''
END FailureModeCode, 
CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN ZCFAILUREMODECODE.DESCRIPTION
ELSE ''''
END FailureModeDesc, 

CASE WHEN ISSUEACTUALSHISTORY.REFERENCEDESIGNATOR = NONCONFORMANCEREPORT.ZCFMREFERENCEDESIGNATOR  AND HISTORYMAINLINE_PROD.TXNDATE <= NONCONFORMANCEREPORT.CREATIONDATE
THEN NONCONFORMANCEREPORT.NCRSTATUS
ELSE NULL
END NCRStatus, 

MONTH (HISTORYMAINLINE_PROD.TXNDATE) as TxnMonth,
YEAR  (HISTORYMAINLINE_PROD.TXNDATE) as TxnYear,
MFGORDER.MFGORDERID MfgOrderID, 
CONTAINER.PRODUCTID ProductID, 
CASE WHEN ZCPRODUCTGROUP.ZCPRODUCTGROUPID IS NULL
THEN ''NULL''
ELSE ZCPRODUCTGROUP.ZCPRODUCTGROUPID
END ComponentProductGroupID, 
CASE WHEN ZCINCOMINGDETAIL.ZCVENDORNAME IS NULL
THEN ''NULL''
ELSE ZCINCOMINGDETAIL.ZCVENDORNAME
END Supplier, 
PRODUCTBASE_COMP.PRODUCTBASEID ComponentProductID 

FROM      
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/HISTORYMAINLINE HISTORYMAINLINE_PROD INNER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/HISTORYCROSSREF HISTORYCROSSREF ON HISTORYMAINLINE_PROD.HISTORYID = HISTORYCROSSREF.HISTORYID INNER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/CONTAINER CONTAINER ON CONTAINER.CONTAINERID = HISTORYCROSSREF.TRACKINGID INNER JOIN
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/MFGORDER MFGORDER ON CONTAINER.MFGORDERID = MFGORDER.MFGORDERID INNER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/PRODUCT PRODUCT ON CONTAINER.PRODUCTID = PRODUCT.PRODUCTID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/NONCONFORMANCEREPORT NONCONFORMANCEREPORT ON CONTAINER.CONTAINERID = NONCONFORMANCEREPORT.CONTAINERID LEFT OUTER JOIN
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/ZCNONCONFORMANCECODE ZCNONCONFORMANCECODE ON NONCONFORMANCEREPORT.ZCNONCONFORMANCECODEID = ZCNONCONFORMANCECODE.ZCNONCONFORMANCECODEID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/ZCFAILUREMODECODE ZCFAILUREMODECODE ON NONCONFORMANCEREPORT.ZCFAILUREMODECODEID = ZCFAILUREMODECODE.ZCFAILUREMODECODEID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/ZCROOTCAUSECODE ZCROOTCAUSECODE ON NONCONFORMANCEREPORT.ZCROOTCAUSECODEID = ZCROOTCAUSECODE.ZCROOTCAUSECODEID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/ZCROOTCAUSETYPE ZCROOTCAUSETYPE ON ZCROOTCAUSECODE.ZCROOTCAUSETYPEID = ZCROOTCAUSETYPE.ZCROOTCAUSETYPEID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/ZCROOTCAUSECATEGORYCODE ZCROOTCAUSECATEGORYCODE ON NONCONFORMANCEREPORT.ZCROOTCAUSECATEGORYCODEID = ZCROOTCAUSECATEGORYCODE.ZCROOTCAUSECATEGORYCODEID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/ZCDISPOSITIONCODE ZCDISPOSITIONCODE ON NONCONFORMANCEREPORT.ZCDISPOSITIONCODEID = ZCDISPOSITIONCODE.ZCDISPOSITIONCODEID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/PRODUCT PRODUCT_1 ON NONCONFORMANCEREPORT.ZCFAILUREMODEPRODUCTID = PRODUCT_1.PRODUCTID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/PRODUCTBASE PRODUCTBASE_1 ON PRODUCT_1.PRODUCTBASEID = PRODUCTBASE_1.PRODUCTBASEID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/WORKFLOWSTEP WORKFLOWSTEP ON NONCONFORMANCEREPORT.CHARGETOSTEPID = WORKFLOWSTEP.WORKFLOWSTEPID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/CDODEFINITION CDODEFINITION ON HISTORYMAINLINE_PROD.TXNTYPE = CDODEFINITION.CDODEFID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/COMPONENTISSUEHISTORY COMPONENTISSUEHISTORY ON COMPONENTISSUEHISTORY.HISTORYMAINLINEID = HISTORYMAINLINE_PROD.HISTORYMAINLINEID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/ISSUEHISTORYDETAIL ISSUEHISTORYDETAIL  ON ISSUEHISTORYDETAIL.COMPONENTISSUEHISTORYID = COMPONENTISSUEHISTORY.COMPONENTISSUEHISTORYID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/ISSUEACTUALSHISTORY ISSUEACTUALSHISTORY ON ISSUEACTUALSHISTORY.ISSUEHISTORYDETAILID = ISSUEHISTORYDETAIL.ISSUEHISTORYDETAILID LEFT OUTER JOIN
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/CONTAINER CONTAINER_GROUP ON CONTAINER_GROUP.CONTAINERID = ISSUEACTUALSHISTORY.FROMCONTAINERID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/ZCINCOMINGDETAIL ZCINCOMINGDETAIL ON ZCINCOMINGDETAIL.ZCINCOMINGDETAILID = CONTAINER_GROUP.ZCINCOMINGDETAILID  LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/PRODUCT PRODUCT_COMP ON PRODUCT_COMP.PRODUCTID = ISSUEACTUALSHISTORY.PRODUCTID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/PRODUCTBASE PRODUCTBASE_COMP ON PRODUCT_COMP.PRODUCTBASEID = PRODUCTBASE_COMP.PRODUCTBASEID LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/ZCPRODUCTGROUPENTRIES ZCPRODUCTGROUPENTRIES ON PRODUCT_COMP.PRODUCTID = ZCPRODUCTGROUPENTRIES.ENTRIESID LEFT OUTER JOIN
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/ZCPRODUCTGROUP ZCPRODUCTGROUP ON ZCPRODUCTGROUP.ZCPRODUCTGROUPID = ZCPRODUCTGROUPENTRIES.ZCPRODUCTGROUPID   LEFT OUTER JOIN 
/shared/MES7/MES7PRD/MES7PRD_LMT_TMP_RO/PRODUCTBASE PRODUCTBASE  ON PRODUCT.PRODUCTBASEID = PRODUCTBASE.PRODUCTBASEID
WHERE
CONTAINER.LEVELID = ''00052820000000b4'' AND 
HISTORYMAINLINE_PROD.TXNTYPE IN (''4719024'') AND
HISTORYMAINLINE_PROD.TXNDATE >= to_date(''',p_startDate),''',''yyyy-mm-dd'') AND 
HISTORYMAINLINE_PROD.TXNDATE <= to_date('''),p_endDate),''',''yyyy-mm-dd'') AND
((ZCINCOMINGDETAIL.ZCVENDORNAME in ('),p_SupplierName),') AND '),'p_SupplierName'),' != ''NULL'') OR
ZCINCOMINGDETAIL.ZCVENDORNAME is null) AND
MFGORDER.MFGORDERID in ('),p_MfgOrderId),') AND
CONTAINER.PRODUCTID in ('),p_ProductId),') AND 
((ZCPRODUCTGROUP.ZCPRODUCTGROUPID in ('),p_ComponentProductGroupId),') AND '),'p_ComponentProductGroupId'),' != ''NULL'') OR
ZCPRODUCTGROUP.ZCPRODUCTGROUPID is null) AND
PRODUCTBASE_COMP.PRODUCTBASEID in ('),p_ComponentProductId),')');
CALL print (sqlText);
OPEN result FOR sqlText;
END